UnitTest Testing
------------------------------------------
Test 1 Result:
    Ran 1 test in 0.001s

    OK


Changed From:
    gallons_of_water = volume * 7.48052
To:
    # False Statement
    gallons_of_water = volume * 12.48052


Test 2 Result:
    Ran 1 test in 0.002s

    FAILED (failures=1)

    23500746.67703152 != 39208709.94498049

    Expected :39208709.94498049
    Actual   :23500746.67703152


PyTest Testing
------------------------------------------
Test 1 Result:

============================= test session starts ==============================
collecting ... collected 1 item

test_calculate_properties2.py::test_calculate_properties2 PASSED         [100%]

============================== 1 passed in 0.01s ===============================

Process finished with exit code 0


Changed From:
    gallons_of_water = volume * 7.48052
To:
    # False Statement
    gallons_of_water = volume * 12.48052


Test 2 Result:

============================= test session starts ==============================
collecting ... collected 1 item

test_calculate_properties2.py::test_calculate_properties2 FAILED         [100%]
test_calculate_properties2.py:7 (test_calculate_properties2)
5098164.944312711 != 8505792.318019826

Expected :8505792.318019826
Actual   :5098164.944312711
<Click to see difference>

def test_calculate_properties2():
        diameter_ft = random.randint(0, 600)
        diameter_in = random.randint(0, 12)
        height_ft = random.randint(0, 900)
        height_in = random.randint(0, 12)

        test_volume, test_surface_area, test_gallons_of_water, test_weight_of_water_pounds, test_head_pressure = (
            calculate_properties(diameter_ft, diameter_in, height_ft, height_in)
        )

        # Check if volume is calculated correctly
        radius_feet = (diameter_ft + diameter_in / 12) / 2
        height_feet = height_ft + height_in / 12
        volume = pi * (radius_feet ** 2) * height_feet
        assert test_volume == volume

        # Check if surface area is calculated correctly
        surface_area = 2 * pi * (radius_feet ** 2) + 2 * pi * radius_feet * height_feet
        assert test_surface_area == surface_area

        # Check if gallons of water are calculated correctly
        gallons_of_water = volume * 12.48052
>       assert test_gallons_of_water == gallons_of_water
E       assert 5098164.944312711 == 8505792.318019826

test_calculate_properties2.py:30: AssertionError


============================== 1 failed in 0.02s ===============================

Process finished with exit code 1
